#!/usr/bin/env bash

# fail fast
set -e

appDir="$(pwd)"
bpDir="$(cd "$(dirname "$0")/.."; pwd)" # absolute path
layersDir="${1:?}"

# shellcheck source=lib/v3/common.sh
source "${bpDir}/lib/v3/common.sh"
# shellcheck source=lib/v3/buildpack.sh
source "${bpDir}/lib/v3/buildpack.sh"
# shellcheck source=lib/common.sh
source "${bpDir}/lib/common.sh"
# shellcheck source=lib/maven.sh
source "${bpDir}/lib/maven.sh"
# shellcheck source=lib/frameworks.sh
source "${bpDir}/lib/frameworks.sh"

export_env "${ENV_DIR}" "." "JAVA_OPTS|JAVA_TOOL_OPTIONS"

mavenLayerToml="$(bp_layer_metadata_create "false" "true" "false" "version=\"3.6.2\"")"
mavenLayer="$(bp_layer_init "$layersDir" "maven" "$mavenLayerToml")"

run_mvn "compile" "$appDir" "$mavenLayer"
remove_mvn "$appDir" "$mavenLayer"

if [ -d target ]; then
  # We don't need nullglob here since we're checking if jarFile is actually a file later.
  for jarFile in target/*.jar; do
    if [[ -f "${jarFile}" ]]; then
      if is_spring_boot "$appDir"; then
        cat >> "${layersDir}/launch.toml" <<EOF
[[processes]]
type = "web"
command = "java -Dserver.port=\$PORT \$JAVA_OPTS -jar $jarFile"
EOF

      elif is_wildfly_swarm "$appDir"; then
        cat >> "${layersDir}/launch.toml" <<EOF
[[processes]]
type = "web"
command = "java -Dswarm.http.port=\$PORT \$JAVA_OPTS -jar $jarFile"
EOF
      fi

      break;
    fi
  done
fi
